plugins {
    id 'java-library'
    id 'nebula.optional-base' version '3.0.3'
    id 'org.jetbrains.kotlin.jvm' version '1.2.70'
}

dependencies {
	annotationProcessor project(':spring-boot-project:spring-boot-tools:spring-boot-configuration-processor')

	implementation enforcedPlatform(project(':spring-boot-project:spring-boot-parent'))
	implementation 'org.springframework:spring-core'
	implementation 'org.springframework:spring-context'
	optional 'ch.qos.logback:logback-classic'
	optional 'com.atomikos:transactions-jdbc'
	optional 'com.atomikos:transactions-jms'
	optional 'com.atomikos:transactions-jta'
	optional 'com.fasterxml.jackson.core:jackson-databind'
	optional 'com.google.code.gson:gson'
	optional 'com.samskivert:jmustache'
	optional 'com.sendgrid:sendgrid-java'
	optional 'com.zaxxer:HikariCP'
	optional 'io.projectreactor.netty:reactor-netty'
	optional 'io.netty:netty-tcnative-boringssl-static'
	optional 'io.undertow:undertow-servlet'
	optional 'javax.jms:javax.jms-api'
	optional 'javax.servlet:javax.servlet-api'
	optional 'junit:junit'
	optional 'org.apache.commons:commons-dbcp2'
	optional 'org.apache.httpcomponents:httpclient'
	optional 'org.apache.logging.log4j:log4j-api'
	optional 'org.apache.logging.log4j:log4j-core'
	optional 'org.apache.tomcat.embed:tomcat-embed-core'
	optional 'org.apache.tomcat.embed:tomcat-embed-jasper'
	optional 'org.apache.tomcat:tomcat-jdbc'
	optional 'org.assertj:assertj-core'
	optional 'org.codehaus.btm:btm'
	optional 'org.codehaus.groovy:groovy'
	optional 'org.codehaus.groovy:groovy-xml'
	optional 'org.eclipse.jetty:jetty-servlets'
	optional 'org.eclipse.jetty:jetty-util'
	optional 'org.eclipse.jetty:jetty-webapp'
	optional 'org.eclipse.jetty:jetty-alpn-conscrypt-server'
	optional 'org.eclipse.jetty.http2:http2-server'
	optional 'org.hamcrest:hamcrest-library'
	optional 'org.hibernate:hibernate-core'
	optional 'org.hibernate.validator:hibernate-validator'
	optional 'org.jboss:jboss-transaction-spi'
	optional 'org.liquibase:liquibase-core'
	optional 'org.neo4j:neo4j-ogm-core'
	optional 'org.slf4j:jul-to-slf4j'
	optional 'org.slf4j:slf4j-api'
	optional 'org.springframework:spring-orm'
	optional 'org.springframework:spring-oxm'
	optional 'org.springframework:spring-test'
	optional 'org.springframework:spring-web'
	optional 'org.springframework:spring-webflux'
	optional 'org.springframework:spring-webmvc'
	optional 'org.springframework.security:spring-security-web'
	optional 'org.springframework.ws:spring-ws-core'
	optional 'org.yaml:snakeyaml'
	optional 'org.jetbrains.kotlin:kotlin-reflect'
	optional 'org.jetbrains.kotlin:kotlin-stdlib'

	testImplementation project(':spring-boot-project:spring-boot-tools:spring-boot-test-support')
	testImplementation 'com.google.appengine:appengine-api-1.0-sdk'
	testImplementation 'com.h2database:h2'
	testImplementation 'com.jayway.jsonpath:json-path'
	testImplementation 'com.microsoft.sqlserver:mssql-jdbc'
	testImplementation 'com.squareup.okhttp3:okhttp'
	testImplementation 'com.sun.xml.messaging.saaj:saaj-impl'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'javax.xml.ws:jaxws-api'
	testImplementation 'mysql:mysql-connector-java'
	testImplementation 'net.sourceforge.jtds:jtds'
	testImplementation 'org.apache.derby:derby'
	testImplementation 'org.apache.httpcomponents:httpasyncclient'
	testImplementation 'org.firebirdsql.jdbc:jaybird-jdk18'
	testImplementation 'org.hsqldb:hsqldb'
	testImplementation 'org.mariadb.jdbc:mariadb-java-client'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.postgresql:postgresql'
	testImplementation 'org.slf4j:jcl-over-slf4j'
	testImplementation 'org.springframework:spring-context-support'
	testImplementation 'org.springframework.data:spring-data-redis'
	testImplementation 'org.xerial:sqlite-jdbc'
}

compileKotlin {
	kotlinOptions {
		jvmTarget = 1.8
	}
}

compileTestKotlin {
	kotlinOptions {
		jvmTarget = 1.8
	}
}
